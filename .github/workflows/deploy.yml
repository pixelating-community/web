name: ci

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push app
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Build & push migrations
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./migrations/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-migrations:latest

      - name: Sign published images
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-migrations:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd /var/www/html/web

            echo "ðŸš€ Pulling latest images..."
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-migrations:latest

            echo "ðŸ”’ Verifying image signatures..."
            cosign verify ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest --key cosign.pub
            cosign verify ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-migrations:latest --key cosign.pub

            echo "ðŸ“œ Running migrations safely..."
            docker compose -f production.yml run --rm migrations

            echo "ðŸš€ Starting app..."
            docker compose -f production.yml up -d --force-recreate --pull always app

            echo " ðŸ§¼ Clean up images..."
            docker image prune -f
