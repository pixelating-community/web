services:
  postgres:
    image: "postgres:16-alpine3.20"
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      start_period: 30s

  migrations:
    build:
      context: ./
      dockerfile: ./migrations/Dockerfile
    image: "ghcr.io/pixelating-community/web-migrations:latest"
    command: ["node", "migrate.mjs"]
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h postgres"]
      interval: 15s
      start_period: 15s
    profiles: ["migrate"]
    restart: "no"

  app:
    image: "ghcr.io/pixelating-community/web:latest"
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      POSTGRES_HOST: postgres

volumes:
  postgres_data:
