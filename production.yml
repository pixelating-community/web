services:
  postgres:
    image: "postgres:16-alpine3.20"
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 15s
      start_period: 30s
  migrations:
    image: "migrations:latest"
    build:
      dockerfile: ./migrations/Dockerfile
      context: ./
    command: node migrate.mjs
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 15s
      start_period: 15s
  app:
    image: "registry.digitalocean.com/redistribute-community/nextjs:latest"
    pull_policy: always
    restart: always
    ports:
      - 3000:3000
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: postgres
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
volumes:
  postgres_data:
